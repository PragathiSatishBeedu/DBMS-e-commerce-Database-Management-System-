
--Populate all the tables

--Inserting values to Table Customer
INSERT INTO CUSTOMER (CUST_FIRST_NAME, CUST_LAST_NAME, CUST_PHNUM, CUST_ZIP) VALUES ('PRANEETHA','BEEDU','9452670572','75252');
INSERT INTO CUSTOMER (CUST_FIRST_NAME, CUST_LAST_NAME, CUST_PHNUM, CUST_ZIP) VALUES ('JOHN', 'DOE', '2744059684', '90210');
INSERT INTO CUSTOMER (CUST_FIRST_NAME, CUST_LAST_NAME, CUST_PHNUM, CUST_ZIP) VALUES ('JANE', 'SMITH', '9484657380', '60601');
INSERT INTO CUSTOMER (CUST_FIRST_NAME, CUST_LAST_NAME, CUST_PHNUM, CUST_ZIP) VALUES ('DAVID', 'LEE', '9462538579', '10001');
INSERT INTO CUSTOMER (CUST_FIRST_NAME, CUST_LAST_NAME, CUST_PHNUM, CUST_ZIP) VALUES ('SARAH', 'JOHNSON', '2534758690', '90210');
INSERT INTO CUSTOMER (CUST_FIRST_NAME, CUST_LAST_NAME, CUST_PHNUM, CUST_ZIP) VALUES ('MICHAEL', 'BROWN', '4657876390', '60601');
INSERT INTO CUSTOMER (CUST_FIRST_NAME, CUST_LAST_NAME, CUST_PHNUM, CUST_ZIP) VALUES ('AMY', 'DAVIS', '8175550141', '76102');
INSERT INTO CUSTOMER (CUST_FIRST_NAME, CUST_LAST_NAME, CUST_PHNUM, CUST_ZIP) VALUES ('JASON', 'BROWN', '2145550132', '75204');
INSERT INTO CUSTOMER (CUST_FIRST_NAME, CUST_LAST_NAME, CUST_PHNUM, CUST_ZIP) VALUES ('EMMA', 'WILLIAMS', '8325550165', '77019');
INSERT INTO CUSTOMER (CUST_FIRST_NAME, CUST_LAST_NAME, CUST_PHNUM, CUST_ZIP) VALUES ('JULIA', 'RODRIGUEZ', '5125550167', '78704');

--Display Customer Table
SELECT * FROM CUSTOMER;

--Inserting values to Table Vendor
INSERT INTO VENDOR (VENDOR_PHNUM, VENDOR_NAME,VENDOR_ZIP,VENDOR_PRODUCT) VALUES ('9876534561','AMAZON','67536','AMAZON TV');
INSERT INTO VENDOR (VENDOR_PHNUM, VENDOR_NAME,VENDOR_ZIP,VENDOR_PRODUCT) VALUES ('9876534571','SHOPIFY','67533','RICHBOOK');
INSERT INTO VENDOR (VENDOR_PHNUM, VENDOR_NAME,VENDOR_ZIP,VENDOR_PRODUCT) VALUES ('9876534581','WALMART','67530','KELLOGGS CORN CEREAL');
INSERT INTO VENDOR (VENDOR_PHNUM, VENDOR_NAME,VENDOR_ZIP,VENDOR_PRODUCT) VALUES ('9876534591','TEMU','67532','SPEAKERS');
INSERT INTO VENDOR (VENDOR_PHNUM, VENDOR_NAME,VENDOR_ZIP,VENDOR_PRODUCT) VALUES ('9876534551','SHEIN','67534','NIKE SNEAKERS');
INSERT INTO VENDOR (VENDOR_PHNUM, VENDOR_NAME,VENDOR_ZIP,VENDOR_PRODUCT) VALUES ('9876534561','BESTBUY','67531','UNDER AROMOUR TSHIRT');
INSERT INTO VENDOR (VENDOR_PHNUM, VENDOR_NAME,VENDOR_ZIP,VENDOR_PRODUCT) VALUES ('9876534571','EBAY','67535','CLEANING MOP');
INSERT INTO VENDOR (VENDOR_PHNUM, VENDOR_NAME,VENDOR_ZIP,VENDOR_PRODUCT) VALUES ('9876534581','TARGET','67537','GRANOLA BAR');
INSERT INTO VENDOR (VENDOR_PHNUM, VENDOR_NAME,VENDOR_ZIP,VENDOR_PRODUCT) VALUES ('9876534591','OVERSTOCK','67539','AIR FRYER');
INSERT INTO VENDOR (VENDOR_PHNUM, VENDOR_NAME,VENDOR_ZIP,VENDOR_PRODUCT) VALUES ('9876534501','NEWEGG','67538','NINTENDO SWITCH');

--Display Vendor Table
SELECT * FROM VENDOR;

----Inserting values to Table Product
INSERT INTO PRODUCT (PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_WEIGHT, PRODUCT_STOCK, VENDOR_ID) VALUES ('AMAZON TV','250.99','32','48', '30');
INSERT INTO PRODUCT (PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_WEIGHT, PRODUCT_STOCK, VENDOR_ID) VALUES ('NINTENDO SWITCH','294.49','2','34','20');
INSERT INTO PRODUCT (PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_WEIGHT, PRODUCT_STOCK, VENDOR_ID) VALUES ('SPEAKERS','90.99','3','44','60');
INSERT INTO PRODUCT (PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_WEIGHT, PRODUCT_STOCK, VENDOR_ID) VALUES ('RICHBOOK','7.99','0.3','89', '100');
INSERT INTO PRODUCT (PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_WEIGHT, PRODUCT_STOCK, VENDOR_ID) VALUES ('NIKE SNEAKERS','159.99','0.9','47', '70');
INSERT INTO PRODUCT (PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_WEIGHT, PRODUCT_STOCK, VENDOR_ID) VALUES ('UNDER AROMOUR TSHIRT','25.00','0.2','98', '80');
INSERT INTO PRODUCT (PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_WEIGHT, PRODUCT_STOCK, VENDOR_ID) VALUES ('GRANOLA BAR','25.90','3.4','67', '40');
INSERT INTO PRODUCT (PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_WEIGHT, PRODUCT_STOCK, VENDOR_ID) VALUES ('KELLOGGS CORN CEREAL','7.49','2.5','117', '50');
INSERT INTO PRODUCT (PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_WEIGHT, PRODUCT_STOCK, VENDOR_ID) VALUES ('CLEANING MOP','15.40','1.5','34', '90');
INSERT INTO PRODUCT (PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_WEIGHT, PRODUCT_STOCK, VENDOR_ID) VALUES ('AIR FRYER','39.90','6','32', '10');

--Display Product Table
SELECT * FROM PRODUCT;

--Inserting Values to Table Purchase_Order 
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('2','1','900');
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('5','2','100');
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('10','3','200');
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('1','4','200');
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('3','5','300');
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('11','6','400');
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('15','7','500');
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('2','1','600');
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('10','8','800');
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('2','10','700');
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('10','9','900' );
INSERT INTO PURCHASE_ORDER (ORDER_QUANTITY, CUST_ID, PRODUCT_ID) VALUES ('10','9','900' );

--Display Puchase_Order Table
SELECT * FROM PURCHASE_ORDER;

--Inserting Values to Table Payment
INSERT INTO PAYMENT (ORDER_ID,PAYMENT_TYPE,PAYMENT_AMT) VALUES ('100','CASH','1000');
INSERT INTO PAYMENT (ORDER_ID,PAYMENT_TYPE,PAYMENT_AMT) VALUES ('200','CASH','2500');
INSERT INTO PAYMENT (ORDER_ID,PAYMENT_TYPE,PAYMENT_AMT) VALUES ('300','CARD','3000');
INSERT INTO PAYMENT (ORDER_ID,PAYMENT_TYPE,PAYMENT_AMT) VALUES ('400','CARD','4000');
INSERT INTO PAYMENT (ORDER_ID,PAYMENT_TYPE,PAYMENT_AMT) VALUES ('500','CASH','5500');
INSERT INTO PAYMENT (ORDER_ID,PAYMENT_TYPE,PAYMENT_AMT) VALUES ('600','CARD','6700');
INSERT INTO PAYMENT (ORDER_ID,PAYMENT_TYPE,PAYMENT_AMT) VALUES ('700','CARD','8000');
INSERT INTO PAYMENT (ORDER_ID,PAYMENT_TYPE,PAYMENT_AMT) VALUES ('800','CASH','10000');
INSERT INTO PAYMENT (ORDER_ID,PAYMENT_TYPE,PAYMENT_AMT) VALUES ('900','CASH','8000');
INSERT INTO PAYMENT (ORDER_ID,PAYMENT_TYPE,PAYMENT_AMT) VALUES ('1200','CASH','200');

--Display Payment Table
SELECT * FROM PAYMENT;

COMMIT;

-- Basic Queries 

--1) Select all columns and all rows from one table 
--Select all columns and rows from Customer table
SELECT * FROM CUSTOMER;

--2) Select five columns and all rows from one table
--Select five columns and all rows from Vendor table
SELECT VENDOR_ID, VENDOR_PHNUM, VENDOR_NAME, VENDOR_ZIP, VENDOR_PRODUCT
FROM VENDOR;

--3) Select all columns from all rows from one view
--Select all columns from view - Purchase_Order_Info
SELECT * FROM PURCHASE_ORDER_INFO;

--4) Using a join on 2 tables, select all columns and all rows from the tables without the use of a Cartesian product
--Select all columns joining tables Payment and Order
SELECT O.*, P.PAYMENT_ID,P.PAYMENT_TYPE,P.PAYMENT_DATE,P.PAYMENT_AMT FROM PURCHASE_ORDER O
JOIN PAYMENT P
ON O.Order_ID = P.Order_ID;

--5) Select and order data retrieved from one table
--Select data from Customer and order by Customer last name in ascending order
SELECT * FROM CUSTOMER
ORDER BY CUST_LAST_NAME ASC;

--6)Using a join on 3 tables, select 5 columns from the 3 tables. Use syntax that would limit the output to 5 rows
--Select 5 columns and limit output to 5 rows from tables - Customer, Purchase_Order and Product
SELECT C.CUST_ID, C.CUST_FIRST_NAME, O.ORDER_DATE, O.PRODUCT_ID, P.PRODUCT_NAME FROM CUSTOMER C 
JOIN PURCHASE_ORDER O ON O.CUST_ID = C.CUST_ID
JOIN PRODUCT P ON P.PRODUCT_ID = O.PRODUCT_ID
FETCH FIRST 5 ROWS ONLY;

--7)Select distinct rows using joins on 3 tables. Display the products ordered by Customers
--Select distinct rows from tables - Product, Purchase_Order and Customer  
SELECT DISTINCT P.PRODUCT_NAME, C.CUST_ID, C.CUST_FIRST_NAME, C.CUST_LAST_NAME FROM PRODUCT P
JOIN PURCHASE_ORDER O ON O.PRODUCT_ID = P.PRODUCT_ID 
JOIN CUSTOMER C ON C.CUST_ID = O.CUST_ID;

--8)Use GROUP BY and HAVING in a select statement using one or more tables
--Select Customer ID and the sum of Order quantity ordered by Customers where the Cust_ID>5
SELECT CUST_ID, SUM (ORDER_QUANTITY) FROM PURCHASE_ORDER GROUP BY CUST_ID HAVING CUST_ID>5;

--9) Use IN clause to select data from one or more tables 
--Select Customer first name, order date and order quantity placed by customer whose first name is either Jason or Sarah
SELECT C.CUST_FIRST_NAME, O.ORDER_DATE, O.ORDER_QUANTITY
FROM CUSTOMER C, PURCHASE_ORDER O
WHERE C.CUST_ID = O.CUST_ID
AND C.CUST_FIRST_NAME IN ('JASON','SARAH');

--10) Select length of one column from one table
--Display the length of Customer First name
SELECT CUST_FIRST_NAME, LENGTH(CUST_FIRST_NAME) AS NAME_LENGTH
FROM CUSTOMER;

--11) Delete one record from one table. 
--Use select statements to demonstrate the table contents before and after the DELETE statement
--Delete row from Payment where order id = 100
SELECT * FROM PAYMENT;

DELETE FROM PAYMENT WHERE ORDER_ID = '100';

SELECT * FROM PAYMENT;

ROLLBACK;
SELECT * FROM PAYMENT;

--12)Update one record from one table. Use select statements to demonstrate the table contents before and after the UPDATE statement.
--Make sure you use ROLLBACK afterwards so that the data will not be physically removed
--Update Payment type from Cash to Card where order id = 100
SELECT ORDER_ID, PAYMENT_TYPE FROM PAYMENT WHERE ORDER_ID = '100';

UPDATE PAYMENT
SET PAYMENT_TYPE = 'CARD' WHERE ORDER_ID = '100';

SELECT ORDER_ID, PAYMENT_TYPE FROM PAYMENT WHERE ORDER_ID = '100';

ROLLBACK;
SELECT * FROM PAYMENT;

--Advance Queries

--13) List Customer Information where the Payment Amount for product is greater than 5000
SELECT C.CUST_FIRST_NAME, C.CUST_LAST_NAME, C.CUST_PHNUM, P.PAYMENT_AMT
From CUSTOMER C
JOIN PURCHASE_ORDER O ON C.CUST_ID = O.CUST_ID
JOIN PAYMENT P ON P.ORDER_ID = O.ORDER_ID
WHERE PAYMENT_AMT > 5000;

--14)List Customer First Name, Last Name, Phone number who ordered product Amazon TV
SELECT DISTINCT C.CUST_FIRST_NAME, C.CUST_LAST_NAME,C.CUST_PHNUM,P.PRODUCT_NAME FROM CUSTOMER C
JOIN PURCHASE_ORDER O ON O.CUST_ID = C.CUST_ID 
JOIN PRODUCT P ON P.PRODUCT_ID = O.PRODUCT_ID
WHERE PRODUCT_NAME = 'AMAZON TV';

--15) Display Customer name, order date, order quantity and product ordered where the customer zip = 75252
SELECT C.CUST_FIRST_NAME, C.CUST_LAST_NAME, O.ORDER_DATE, O.ORDER_QUANTITY, P.PRODUCT_NAME FROM CUSTOMER C 
INNER JOIN PURCHASE_ORDER O ON C.CUST_ID = O.CUST_ID 
INNER JOIN PRODUCT P ON O.PRODUCT_ID = P.PRODUCT_ID
WHERE C.CUST_ZIP = '75252';

--16) Display Customer ID, Customer Name and their product counts
SELECT C.CUST_ID, C.CUST_FIRST_NAME, COUNT(P.PRODUCT_ID) AS PRODUCT_COUNT FROM CUSTOMER C 
LEFT JOIN PURCHASE_ORDER O ON C.CUST_ID = O.CUST_ID
LEFT JOIN PRODUCT P ON O.PRODUCT_ID = P.PRODUCT_ID 
GROUP BY C.CUST_ID, C.CUST_FIRST_NAME;

--17) Display the names of Customers and products who ordered product with maximum product price
SELECT C.CUST_FIRST_NAME, C.CUST_LAST_NAME, P.PRODUCT_NAME, P.PRODUCT_PRICE, O.ORDER_DATE FROM CUSTOMER C 
JOIN PURCHASE_ORDER O ON C.CUST_ID = O.CUST_ID
JOIN PRODUCT P ON P.PRODUCT_ID = O.PRODUCT_ID
WHERE P.PRODUCT_PRICE = (SELECT MAX (PRODUCT_PRICE)FROM PRODUCT );

--18) Display names of customers and payment date who has payment type as CASH
SELECT C.CUST_FIRST_NAME, C.CUST_LAST_NAME, PY.PAYMENT_DATE, PY.PAYMENT_TYPE FROM CUSTOMER C
JOIN PURCHASE_ORDER O ON C.CUST_ID = O.CUST_ID
JOIN PAYMENT PY ON PY.ORDER_ID = O.ORDER_ID
WHERE PY.PAYMENT_TYPE = 'CASH';

--19) Display vendor and product details where order is oplaced by Customer - Praneetha Beedu
SELECT C.CUST_FIRST_NAME, C.CUST_LAST_NAME, O.ORDER_DATE, P.PRODUCT_NAME, V.VENDOR_NAME, V.VENDOR_ZIP, V.VENDOR_PHNUM FROM CUSTOMER C
JOIN PURCHASE_ORDER O ON O.CUST_ID = C.CUST_ID 
JOIN PRODUCT P ON P.PRODUCT_ID = O.PRODUCT_ID 
JOIN VENDOR V ON V.VENDOR_ID = P.VENDOR_ID
WHERE CUST_FIRST_NAME = 'PRANEETHA' AND CUST_LAST_NAME = 'BEEDU';

--20) Display customer and payment details where the order quantity is between 1 and 5
SELECT C.CUST_FIRST_NAME, C.CUST_LAST_NAME, P.PRODUCT_NAME, O.ORDER_QUANTITY FROM CUSTOMER C
JOIN PURCHASE_ORDER O ON O.CUST_ID = C.CUST_ID 
JOIN PRODUCT P ON P.PRODUCT_ID = O.PRODUCT_ID
WHERE O.ORDER_QUANTITY BETWEEN '1' AND '5';

COMMIT;

